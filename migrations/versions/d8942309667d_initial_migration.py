"""Initial migration

Revision ID: d8942309667d
Revises:
Create Date: 2025-04-29 11:23:58.173572

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd8942309667d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hospital_visit_settings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('default_visit_interval', sa.Integer(), nullable=False),
                    sa.Column('auto_schedule_visits', sa.Boolean(), nullable=False),
                    sa.Column('default_order_for_next_but_one', sa.Boolean(), nullable=False),
                    sa.Column('timezone_name', sa.String(length=50), nullable=False),
                    sa.Column('last_deduction_check', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('hospital_visits',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('visit_date', sa.DateTime(), nullable=False),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('order_for_next_but_one', sa.Boolean(), nullable=False, comment='If true, orders for this visit should last until the next-but-one visit'),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('medications',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=False),
                    sa.Column('dosage', sa.Float(), nullable=False, comment='DEPRECATED: No longer used for calculations, use schedules instead.'),
                    sa.Column('frequency', sa.Float(), nullable=False, comment='DEPRECATED: No longer used for calculations, use schedules instead.'),
                    sa.Column('active_ingredient', sa.String(length=200), nullable=True),
                    sa.Column('form', sa.String(length=50), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('package_size_n1', sa.Integer(), nullable=True),
                    sa.Column('package_size_n2', sa.Integer(), nullable=True),
                    sa.Column('package_size_n3', sa.Integer(), nullable=True),
                    sa.Column('min_threshold', sa.Integer(), nullable=False, comment='Minimum inventory level before warning'),
                    sa.Column('safety_margin_days', sa.Integer(), nullable=False, comment='Extra days to add when calculating needs'),
                    sa.Column('auto_deduction_enabled', sa.Boolean(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('prescription_templates',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('template_file', sa.String(length=255), nullable=False),
                    sa.Column('first_field_tab_index', sa.Integer(), nullable=False),
                    sa.Column('medications_per_page', sa.Integer(), nullable=False),
                    sa.Column('column_mappings', sa.JSON(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('inventory',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('medication_id', sa.Integer(), nullable=False),
                    sa.Column('current_count', sa.Integer(), nullable=False, comment='Current pill/unit count'),
                    sa.Column('packages_n1', sa.Integer(), nullable=False),
                    sa.Column('packages_n2', sa.Integer(), nullable=False),
                    sa.Column('packages_n3', sa.Integer(), nullable=False),
                    sa.Column('last_updated', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['medication_id'], ['medications.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('medication_id')
                    )
    op.create_table('medication_schedules',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('medication_id', sa.Integer(), nullable=False),
                    sa.Column('schedule_type', sa.Enum('DAILY', 'INTERVAL', 'WEEKDAYS', name='scheduletype'), nullable=False),
                    sa.Column('interval_days', sa.Integer(), nullable=False),
                    sa.Column('weekdays', sa.JSON(), nullable=True),
                    sa.Column('times_of_day', sa.JSON(), nullable=False),
                    sa.Column('units_per_dose', sa.Float(), nullable=False),
                    sa.Column('last_deduction', sa.DateTime(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['medication_id'], ['medications.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('hospital_visit_id', sa.Integer(), nullable=False),
                    sa.Column('created_date', sa.DateTime(), nullable=False),
                    sa.Column('status', sa.String(length=20), nullable=False),
                    sa.ForeignKeyConstraint(['hospital_visit_id'], ['hospital_visits.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('inventory_logs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('inventory_id', sa.Integer(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=False),
                    sa.Column('previous_count', sa.Integer(), nullable=False),
                    sa.Column('adjustment', sa.Integer(), nullable=False),
                    sa.Column('new_count', sa.Integer(), nullable=False),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('order_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('medication_id', sa.Integer(), nullable=True),
                    sa.Column('quantity_needed', sa.Integer(), nullable=False),
                    sa.Column('packages_n1', sa.Integer(), nullable=False),
                    sa.Column('packages_n2', sa.Integer(), nullable=False),
                    sa.Column('packages_n3', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['medication_id'], ['medications.id'], ),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_items')
    op.drop_table('inventory_logs')
    op.drop_table('orders')
    op.drop_table('medication_schedules')
    op.drop_table('inventory')
    op.drop_table('prescription_templates')
    op.drop_table('medications')
    op.drop_table('hospital_visits')
    op.drop_table('hospital_visit_settings')
    # ### end Alembic commands ###
